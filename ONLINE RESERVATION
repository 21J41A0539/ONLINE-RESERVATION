import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class OnlineReservationSystem {
    public static void main(String[] args) {
        LoginForm loginForm = new LoginForm();
        if (loginForm.display()) {
            ReservationSystem reservationSystem = new ReservationSystem();
            CancellationForm cancellationForm = new CancellationForm(reservationSystem);
            
            Scanner scanner = new Scanner(System.in);
            while (true) {
                System.out.println("\n=== Main Menu ===");
                System.out.println("1. Make Reservation");
                System.out.println("2. Cancel Reservation");
                System.out.println("3. Exit");
                System.out.print("Enter your choice: ");
                int choice = scanner.nextInt();
                
                switch (choice) {
                    case 1:
                        reservationSystem.makeReservation();
                        break;
                    case 2:
                        cancellationForm.cancelReservation();
                        break;
                    case 3:
                        System.out.println("Thank you for using the Online Reservation System. Goodbye!");
                        return;
                    default:
                        System.out.println("Invalid choice. Please try again.");
                }
            }
        }
    }
}

class LoginForm {
    private String validUsername = "admin";
    private String validPassword = "password";

    public boolean display() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("=== Login Form ===");
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        if (authenticate(username, password)) {
            System.out.println("Login successful!");
            return true;
        } else {
            System.out.println("Invalid username or password. Please try again.");
            return false;
        }
    }

    private boolean authenticate(String username, String password) {
        return username.equals(validUsername) && password.equals(validPassword);
    }
}

class ReservationSystem {
    private Map<String, Reservation> reservations = new HashMap<>();
    private int pnrCounter = 1000;

    public void makeReservation() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("\n=== Reservation Form ===");
        
        System.out.print("Enter passenger name: ");
        String name = scanner.nextLine();
        
        System.out.print("Enter train number: ");
        int trainNumber = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        
        System.out.print("Enter class type: ");
        String classType = scanner.nextLine();
        
        System.out.print("Enter date of journey (DD/MM/YYYY): ");
        String dateOfJourney = scanner.nextLine();
        
        System.out.print("Enter from (place): ");
        String from = scanner.nextLine();
        
        System.out.print("Enter to (destination): ");
        String to = scanner.nextLine();

        String pnr = generatePNR();
        Reservation reservation = new Reservation(pnr, name, trainNumber, classType, dateOfJourney, from, to);
        reservations.put(pnr, reservation);

        System.out.println("\nReservation successful!");
        System.out.println("Your PNR number is: " + pnr);
        System.out.println(reservation);
    }

    private String generatePNR() {
        return "PNR" + (++pnrCounter);
    }

    public Reservation getReservation(String pnr) {
        return reservations.get(pnr);
    }

    public void cancelReservation(String pnr) {
        reservations.remove(pnr);
    }
}

class CancellationForm {
    private ReservationSystem reservationSystem;

    public CancellationForm(ReservationSystem reservationSystem) {
        this.reservationSystem = reservationSystem;
    }

    public void cancelReservation() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("\n=== Cancellation Form ===");
        System.out.print("Enter PNR number: ");
        String pnr = scanner.nextLine();

        Reservation reservation = reservationSystem.getReservation(pnr);
        if (reservation != null) {
            System.out.println("\nReservation details:");
            System.out.println(reservation);
            System.out.print("\nDo you want to cancel this reservation? (yes/no): ");
            String confirm = scanner.nextLine();
            if (confirm.equalsIgnoreCase("yes")) {
                reservationSystem.cancelReservation(pnr);
                System.out.println("Reservation cancelled successfully.");
            } else {
                System.out.println("Cancellation aborted.");
            }
        } else {
            System.out.println("No reservation found with the given PNR number.");
        }
    }
}

class Reservation {
    private String pnr;
    private String passengerName;
    private int trainNumber;
    private String classType;
    private String dateOfJourney;
    private String from;
    private String to;

    public Reservation(String pnr, String passengerName, int trainNumber, String classType, String dateOfJourney, String from, String to) {
        this.pnr = pnr;
        this.passengerName = passengerName;
        this.trainNumber = trainNumber;
        this.classType = classType;
        this.dateOfJourney = dateOfJourney;
        this.from = from;
        this.to = to;
    }

    @Override
    public String toString() {
        return "PNR: " + pnr +
               "\nPassenger Name: " + passengerName +
               "\nTrain Number: " + trainNumber +
               "\nClass Type: " + classType +
               "\nDate of Journey: " + dateOfJourney +
               "\nFrom: " + from +
               "\nTo: " + to;
    }
}




